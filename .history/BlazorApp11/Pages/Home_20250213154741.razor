@page "/"
@using System.Net.Http.Json
@using Blazored.LocalStorage
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JSRuntime

<PageTitle>Weather Prediction</PageTitle>

<style>
    body {
        background-image: url('mn.jpg');
        background-size: cover;
        background-position: center;
        margin: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        font-family: 'Arial', sans-serif;
        color: white;
    }
    .content-container {
        background: rgba(255, 255, 255, 0.9);
        padding: 30px;
        border-radius: 15px;
        width: 80%;
        max-width: 600px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        text-align: center;
        color: black;
    }
    h1 {
        font-size: 2em;
        font-weight: bold;
        margin-bottom: 20px;
        color: #1e3a8a;
    }
    .form-group {
        margin-bottom: 15px;
    }
    .form-group input, .form-group button {
        padding: 12px;
        font-size: 1em;
        border-radius: 8px;
        border: 1px solid #ccc;
        width: 100%;
    }
    .form-group input {
        background-color: #f8f9fa;
        color: #333;
    }
    .form-group button {
        background-color: #1e3a8a;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    .form-group button:hover {
        background-color: #172554;
    }
</style>

<div class="content-container">
    <h1>Weather Prediction 🌦</h1>
    <div class="form-group">
        <input @bind="city" placeholder="Enter city" class="form-control" />
    </div>
    <div class="form-group">
        <button @onclick="GetWeather">Get Weather</button>
        <button @onclick="AddToFavorites">Add to Favorites</button>
    </div>
    @if (!string.IsNullOrEmpty(weather))
    {
        <div class="message">
            <p>@weather</p>
        </div>
    }
</div>

@code {
    private string city = "";
    private string weather = "";
    private List<string> favoriteCities = new();

    protected override async Task OnInitializedAsync()
    {
        favoriteCities = await LocalStorage.GetItemAsync<List<string>>("favorites") ?? new List<string>();
    }

    private async Task GetWeather()
    {
        if (!string.IsNullOrEmpty(city))
        {
            var http = new HttpClient();
            var apiKey = "027e44160659370f158944e22e8f23aa";
            var response = await http.GetStringAsync($"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={apiKey}&units=metric");
            var json = System.Text.Json.JsonDocument.Parse(response);
            var cityName = json.RootElement.GetProperty("name").GetString();
            var temp = json.RootElement.GetProperty("main").GetProperty("temp").GetDouble();
            weather = $"{cityName}: {temp}°C";
            await JSRuntime.InvokeVoidAsync("speakText", weather);
        }
        else
        {
            weather = "Please enter a city.";
        }
    }
}

<script>
    function speakText(text) {
        var msg = new SpeechSynthesisUtterance(text);
        window.speechSynthesis.speak(msg);
    }
</script>
