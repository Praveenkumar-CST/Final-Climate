@page "/"

@using System.Net.Http.Json
<PageTitle>Weather Prediction</PageTitle>

<div class="flex flex-col items-center p-6 bg-blue-100 min-h-screen">
    <h1 class="text-3xl font-bold text-blue-700 mb-4">Weather Prediction</h1>
    <div class="flex gap-2 mb-4">
        <input @bind="city" placeholder="Enter city" class="p-2 border rounded-md" />
        <button @onclick="GetWeather" class="bg-blue-500 text-white px-4 py-2 rounded-md">Get Weather</button>
    </div>

    @if (!string.IsNullOrEmpty(weather))
    {
        <div class="bg-white p-4 rounded-lg shadow-md text-center">
            <p class="text-lg font-semibold">@weather</p>
        </div>
    }

    @if (forecast != null)
    {
        <div class="mt-6">
            <h2 class="text-2xl font-bold text-blue-700 mb-3">5-Day Forecast</h2>
            <div class="bg-white p-4 rounded-lg shadow-md">
                <table class="w-full text-left">
                    <thead>
                        <tr class="bg-blue-300">
                            <th class="p-2">Date</th>
                            <th class="p-2">Temperature (°C)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var day in forecast)
                        {
                            <tr class="border-t">
                                <td class="p-2">@day.Date</td>
                                <td class="p-2">@day.Temp°C</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    private string city = "";
    private string weather = "";
    private List<ForecastDay> forecast;
    
    private async Task GetWeather()
    {
        if (!string.IsNullOrEmpty(city))
        {
            var http = new HttpClient();
            var apiKey = "027e44160659370f158944e22e8f23aa";
            var response = await http.GetStringAsync($"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={apiKey}&units=metric");
            var json = System.Text.Json.JsonDocument.Parse(response);
            var cityName = json.RootElement.GetProperty("name").GetString();
            var temp = json.RootElement.GetProperty("main").GetProperty("temp").GetDouble();
            weather = $"{cityName}: {temp}°C";

            // Fetch 5-day forecast
            var forecastResponse = await http.GetStringAsync($"https://api.openweathermap.org/data/2.5/forecast?q={city}&appid={apiKey}&units=metric");
            var forecastJson = System.Text.Json.JsonDocument.Parse(forecastResponse);
            var forecastList = forecastJson.RootElement.GetProperty("list").EnumerateArray()
                .Where((x, index) => index % 8 == 0)
                .Select(x => new ForecastDay
                {
                    Date = x.GetProperty("dt_txt").GetString().Split(' ')[0],
                    Temp = x.GetProperty("main").GetProperty("temp").GetDouble()
                }).ToList();
            
            forecast = forecastList;
        }
    }

    private class ForecastDay
    {
        public string Date { get; set; }
        public double Temp { get; set; }
    }
}
