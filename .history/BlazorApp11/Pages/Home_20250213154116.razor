@page "/"

@using System.Net.Http.Json
@using Blazored.LocalStorage
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject Supabase.Client SupabaseClient

<PageTitle>Weather Prediction</PageTitle>

<style>
body {
    background-image: url('mn.jpg');
    background-size: cover;
    background-position: center;
    margin: 0;
    height: 100vh;
    display: flex;
    font-family: 'Arial', sans-serif;
    color: white;
}

.sidebar {
    width: 250px;
    background: #1E1E2F;
    padding: 20px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    color: white;
}

.sidebar h2 {
    text-align: center;
    margin-bottom: 20px;
    font-size: 1.5em;
}

.sidebar a {
    color: white;
    text-decoration: none;
    padding: 10px;
    display: block;
    border-radius: 5px;
}

.sidebar a:hover {
    background: #3b82f6;
}

.main-content {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.content-container {
    background: rgba(0, 0, 0, 0.6);
    padding: 30px;
    border-radius: 15px;
    width: 80%;
    max-width: 500px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    text-align: center;
}

h1 {
    font-size: 2em;
    font-weight: bold;
    margin-bottom: 20px;
    color: #FFD700;
}

input, button {
    padding: 10px;
    font-size: 1em;
    border-radius: 8px;
    border: 1px solid #ddd;
    width: 100%;
    margin-bottom: 10px;
}

button {
    background-color: #3b82f6;
    color: white;
    cursor: pointer;
}

button:hover {
    background-color: #2563eb;
}
</style>

<div class="sidebar">
    <h2>WeatherApp</h2>
    <a href="#">Home</a>
    <a href="#">Favorites</a>
    <a href="#">History</a>
</div>

<div class="main-content">
    <div class="content-container">
        <h1>Weather Prediction 🌦</h1>
        <input @bind="city" placeholder="Enter city" />
        <button @onclick="GetWeather">Get Weather</button>
        <button @onclick="AddToFavorites">Add to Favorites</button>

        @if (!string.IsNullOrEmpty(weather))
        {
            <p>@weather</p>
        }

        @if (isAdded)
        {
            <p style="color: lightgreen;">City added to favorites!</p>
        }
    </div>
</div>

@code {
    private string city = "";
    private string weather = "";
    private List<string> favoriteCities = new();
    private bool isAdded = false;

    // Constructor injection to avoid null issues
    private readonly Supabase.Client supabase;

    public Home(Supabase.Client supabaseClient)
    {
        supabase = supabaseClient ?? throw new ArgumentNullException(nameof(supabaseClient));
    }

    private async Task GetWeather()
    {
        if (!string.IsNullOrEmpty(city))
        {
            var http = new HttpClient();
            var apiKey = "027e44160659370f158944e22e8f23aa";
            var response = await http.GetStringAsync($"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={apiKey}&units=metric");
            var json = System.Text.Json.JsonDocument.Parse(response);
            var cityName = json.RootElement.GetProperty("name").GetString();
            var temp = json.RootElement.GetProperty("main").GetProperty("temp").GetDouble();
            weather = $"{cityName}: {temp}°C";
        }
        else
        {
            weather = "Please enter a city.";
        }
    }

    private async Task AddToFavorites()
    {
        if (!string.IsNullOrEmpty(city) && !favoriteCities.Contains(city))
        {
            favoriteCities.Add(city);
            await LocalStorage.SetItemAsync("favorites", favoriteCities);
            isAdded = true;
            StateHasChanged();
        }
    }
}
