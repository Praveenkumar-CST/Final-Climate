@page "/welcome"
@using Microsoft.AspNetCore.Components.Forms
@using Supabase
@using Supabase.Gotrue
@inject NavigationManager Navigation

<h3>@(isLogin ? "Login" : "Sign Up")</h3>

<div class="auth-container">
    <EditForm Model="@authModel" OnValidSubmit="Authenticate">
        <DataAnnotationsValidator />
        <ValidationSummary />
        
        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="authModel.Email" class="form-control" />
        </div>
        <div class="form-group">
            <label>Password:</label>
            <InputText @bind-Value="authModel.Password" Type="password" class="form-control" />
        </div>
        
        <button type="submit" class="btn btn-primary btn-block">@(isLogin ? "Login" : "Sign Up")</button>
    </EditForm>
    
    <p class="toggle-text">
        @(isLogin ? "Don't have an account?" : "Already have an account?") 
        <a href="#" @onclick="ToggleMode">@(isLogin ? "Sign Up" : "Login")</a>
    </p>
</div>

<style>
    .auth-container {
        width: 300px;
        margin: auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }
    .form-group {
        margin-bottom: 15px;
        text-align: left;
    }
    .form-control {
        width: 100%;
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }
    .btn-block {
        width: 100%;
        padding: 10px;
    }
    .toggle-text {
        margin-top: 10px;
    }
</style>

@code {
    private bool isLogin = true;
    private AuthModel authModel = new();
    private Supabase.Client supabase;

    protected override async Task OnInitializedAsync()
    {
        supabase = new Supabase.Client("https://uzvvxayexmusumorxjtx.supabase.co", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV6dnZ4YXlleG11c3Vtb3J4anR4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkyNjQyMzMsImV4cCI6MjA1NDg0MDIzM30.lPqH-Xv0BYuAr-KprV-HdbDktFBMcqUv5_ZCuEpxQNU");
    }
    
    private async Task Authenticate()
    {
        try
        {
            if (isLogin)
            {
                var response = await supabase.Auth.SignIn(authModel.Email, authModel.Password);
                if (response.User != null)
                {
                    Console.WriteLine($"Logged in {authModel.Email}");
                    Navigation.NavigateTo("/");
                }
                else
                {
                    Console.WriteLine("Incorrect credentials");
                }
            }
            else
            {
                var response = await supabase.Auth.SignUp(authModel.Email, authModel.Password);
                if (response.User != null)
                {
                    Console.WriteLine($"Signed up {authModel.Email}");
                    Navigation.NavigateTo("/");
                }
                else
                {
                    Console.WriteLine("Sign up failed");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    
    private void ToggleMode()
    {
        isLogin = !isLogin;
        authModel = new();
    }
    
    public class AuthModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
