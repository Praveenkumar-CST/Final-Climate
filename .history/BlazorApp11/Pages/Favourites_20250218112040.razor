@page "/favorites"
@using MongoDB.Driver
@inject IMongoClient MongoClient
@inject IMongoDatabase MongoDatabase
@inject NavigationManager Navigation

<PageTitle>Favorites</PageTitle>

<style>
    .fav-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        padding: 20px;
    }

    .fav-item {
        background: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 20px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        transition: transform 0.3s;
        width: 220px;
    }

    .fav-item:hover {
        transform: scale(1.05);
    }

    .fav-date {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 8px;
    }

    .fav-temp {
        font-size: 22px;
        font-weight: bold;
        margin-bottom: 6px;
        color: #FFD700;
    }

    .remove-btn {
        margin-top: 10px;
        background: red;
        padding: 8px 12px;
        border-radius: 6px;
        cursor: pointer;
        transition: 0.3s;
    }

    .remove-btn:hover {
        background: darkred;
    }
</style>

<div class="flex flex-col items-center p-6 min-h-screen text-white">
    <h1 class="text-4xl font-bold mb-6 shadow-lg p-2 rounded text-white bg-black bg-opacity-50">❤️ Favorite Cities</h1>
    <button @onclick="GoBack" class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-md shadow-lg mb-6">⬅ Back</button>

    @if (favoriteCities.Any())
    {
        <div class="fav-container">
            @foreach (var city in favoriteCities)
            {
                <div class="fav-item">
                    <p class="fav-date">@city</p>
                    <button @onclick="() => RemoveFromFavorites(city)" class="remove-btn">Remove</button>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-white text-lg">No favorite cities added yet.</p>
    }
</div>

@code {
    private List<string> favoriteCities = new List<string>();

    // MongoDB Collection reference
    private IMongoCollection<City> _cityCollection;

    protected override async Task OnInitializedAsync()
    {
        // Connect to MongoDB Database and collection
        _cityCollection = MongoDatabase.GetCollection<City>("favoriteCities");

        // Fetch all favorite cities from MongoDB
        var cities = await _cityCollection.Find(_ => true).ToListAsync();
        favoriteCities = cities.Select(c => c.Name).ToList();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }

    private async Task RemoveFromFavorites(string city)
    {
        // Remove city from MongoDB
        await _cityCollection.DeleteOneAsync(c => c.Name == city);

        // Update the local list
        favoriteCities.Remove(city);
        StateHasChanged();
    }
}

public class City
{
    public string Name { get; set; }
}
