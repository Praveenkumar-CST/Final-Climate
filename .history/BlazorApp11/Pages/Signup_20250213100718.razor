@page "/signup"
@using Microsoft.AspNetCore.Components.Forms
@using Supabase
@inject NavigationManager Navigation

<h3>Sign Up</h3>

<div class="auth-container">
    <EditForm Model="@authModel" OnValidSubmit="RegisterUser">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="authModel.Email" class="form-control" />
        </div>
        <div class="form-group">
            <label>Password:</label>
            <InputText @bind-Value="authModel.Password" Type="password" class="form-control" />
        </div>
        <div class="form-group">
            <label>Full Name:</label>
            <InputText @bind-Value="authModel.FullName" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Sign Up</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="message">@message</p>
    }
</div>

@code {
    private AuthModel authModel = new();
    private Supabase.Client supabase;
    private string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        supabase = new Supabase.Client("https://uzvvxayexmusumorxjtx.supabase.co", 
            "your-supabase-key");
    }

    private async Task RegisterUser()
    {
        try
        {
            var response = await supabase.Auth.SignUp(authModel.Email, authModel.Password);

            if (response?.User != null)
            {
                var userData = new { email = authModel.Email, full_name = authModel.FullName };
                await supabase.From<object>("users").Insert(userData);

                message = "Sign-up successful. Please log in.";
                await Task.Delay(2000);
                Navigation.NavigateTo("/welcome");
            }
            else
            {
                message = "Sign-up failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
        }
    }

    public class AuthModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string FullName { get; set; } = string.Empty;
    }
}
